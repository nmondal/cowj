/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1.1/userguide/building_java_projects.html
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    // https://imperceptiblethoughts.com/shadow/introduction/
    id 'com.github.johnrengelman.shadow'  version "8.1.1"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    mavenLocal()
    gradlePluginPortal()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'
    // local libraries
    implementation 'org.zoomba-lang:zoomba.lang.core:0.3-SNAPSHOT'
    implementation 'com.sparkjava:spark-core:3-JDK17-SNAPSHOT'
    // end of local libraries
    // TODO cron
    implementation 'org.slf4j:slf4j-jdk14:2.0.7'
    // Scripting Engines JSR-223
    implementation 'org.mozilla:rhino-engine:1.7.14' //js
    // groovy
    implementation 'org.apache.groovy:groovy:4.0.12'
    implementation 'org.apache.groovy:groovy-jsr223:4.0.12'
    // jython ???
    implementation 'org.python:jython:2.7.3'

    // Storage...
    implementation 'redis.clients:jedis:5.0.0-beta1'
    implementation 'com.google.cloud:google-cloud-storage:2.22.3'

    // fcm
    implementation 'com.google.firebase:firebase-admin:9.1.1'

    // mysql connector
    implementation 'com.mysql:mysql-connector-j:8.0.33'
}

shadowJar {
    archiveBaseName.set('cowj')
    manifest {
        attributes 'Main-Class' : "cowj.App"
    }
}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit4 test framework
            useJUnit('4.13.2')
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'cowj.App'
}
